// SERVER.C

#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <sys/ipc.h>
#include <sys/shm.h>

struct data {
    char str[100]; // String to hold user input
    int flag;     // Flag to signal status
};

int main() {
    key_t key = ftok("abc.txt", 'A');
    int shmid = shmget(key, sizeof(struct data), 0777 | IPC_CREAT);
    struct data *d = (struct data *)shmat(shmid, NULL, 0);
    
    printf("Enter data: ");
    fgets(d->str, sizeof(d->str), stdin);
    d->flag = 1;

    while (d->flag != -1) {
        sleep(2);
    }

    shmdt(d);
    shmctl(shmid, IPC_RMID, NULL);

    return 0;
}



 /*
To compile and run the server program, use the following commands:
1. Compile the server: gcc server.c -o server
2. Run the server: ./server
*/



// CLIENT.c

#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <sys/ipc.h>
#include <sys/shm.h>

struct data {
    char str[100]; // String to hold data from server
    int flag;     // Flag to signal status
};

int main() {
    key_t key = ftok("abc.txt", 'A');
    int shmid = shmget(key, sizeof(struct data), 0777 | IPC_CREAT);
    struct data *d = (struct data *)shmat(shmid, NULL, 0);

    while (d->flag != 1) {
        sleep(2);
    }

    printf("Accepted data: %s", d->str);
    d->flag = -1;

    shmdt(d);

    return 0;
}



/*
To compile and run the client program, use the following commands:
1. Compile the client:  gcc client.c -o client
2. Run the client: ./client
*/
